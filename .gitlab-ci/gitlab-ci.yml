include:
  - project: univention/infrastructure/docker-services
    file:
    - pre-commit.yml
    - kaniko.yml
  - project: univention/dev/internal/ucsschool-ci-utils
    file:
    - fragments/misc.yaml
    - fragments/appcenter.yaml

stages:
  - prepare
  - lint
  - build
  - tests
  - production
  - docs
  - cleanup

variables:
  APP_BASE_VERSION: "999.0.0-staging"
  APP_UCS_VERSION: "5.0"
  APP_ID: "ucsschool-id-connector"
  APP_NAME: "5.0/$APP_ID"
  ID_CONNECTOR_COVERAGE_LIMIT: "72"
  FORCE_APPCENTER:
    value: "false"
    options:
      - "true"
      - "false"
    description: "Force appcenter upload"

create_app_version:
  stage: prepare
  extends: .create_app_version

update_appcenter:
  stage: build
  extends: .update_appcenter
  needs:
    - job: create_app_version
    - job: build_docker_image
      optional: true
  variables:
    APPCENTER_FILE_DIR: "appcenter_scripts/"
  script:
    - cd "$APPCENTER_FILE_DIR"
    - mv preinst.tmpl preinst
    - sed -i -e "/%LOGROTATE-TEMPLATE%/r ../files/logrotate.d/ucsschool-id-connector" -e "/%LOGROTATE-TEMPLATE%/d" preinst;
    - sed -i -e "/%ID-CONNECTOR-INFO%/r ../files/ucsschool-id-connector.univention-config-registry" -e "/%ID-CONNECTOR-INFO%/d" preinst;
    - sed -i -e "/%CA-CERTIFICATE-HOOK-TEMPLATE%/r ../files/ca-certificates/update.d/ucsschool-id-connector" -e "/%CA-CERTIFICATE-HOOK-TEMPLATE%/d" preinst;
    - cd ..
    - !reference [.update_appcenter, script]

do_release:
  stage: production
  extends: .do_release

create_gitlab_release:
  stage: production
  extends: .create_gitlab_release
  needs: [do_release]
  release:
    assets:
      links:
        - name: "Changelog"
          url: "https://docs.software-univention.de/ucsschool-id-connector/HISTORY.html"

check_release:
  stage: production
  needs: [do_release, create_app_version]
  extends: .check_release

delete_app_version:
  stage: cleanup
  extends: .delete_app_version

announce_app_chat:
  stage: cleanup
  rules:
    - if: "$CI_COMMIT_TAG"
  extends: .send_chat_message
  variables:
    ALIAS: "UCS@school Team"
    DESTINATION: "#ucsschool"
    MESSAGE: "The UCS@school ID Connector app was released in version $APP_VERSION. Changes can be found in the [Changelog](https://docs.software-univention.de/ucsschool-id-connector/HISTORY.html)."

announce_app_mail:
  stage: cleanup
  rules:
    - if: "$CI_COMMIT_TAG"
  extends: .send_mail
  variables:
    SUBJECT: "App Release: UCS@school ID Connector"
    RECIPIENT: "app-announcement@univention.de"
    SENDER: "ucsschool-maintainers@univention.de"
  before_script:
    - |
      cat >mail.txt<< EOF
      Hello,
      the UCS@school ID Connector has been released in version ${APP_VERSION}.

      For changes, see https://docs.software-univention.de/ucsschool-id-connector/HISTORY.html

      Best regards

      The UCS@school Team
      EOF


run_pre_commit:
  stage: lint
  extends: .pre-commit
  variables:
    PRE_COMMIT_IMAGE: "docker-registry.knut.univention.de/knut/pre-commit-opa"

lint_commit_messages:
  stage: lint
  needs: []
  variables:
    HOOK_IDS: "conventional-pre-commit issue-reference"
  extends: .lint_commit_messages


build_product_tests:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/curlimages/curl:8.11.1
  script:
    - tar -czvf product_tests.tar.gz product_tests
    - 'curl --fail-with-body --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file product_tests.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/product_tests/0.0.1/product_tests.tar.gz"'

build_docker_image:
  stage: build
  extends: .kaniko
  rules:
    - if: "$CI_COMMIT_TAG"
      variables:
        REGISTRY: "artifacts.software-univention.de"
        REGISTRY_IMAGE: "$REGISTRY/ucsschool/ucsschool-id-connector"
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
      KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/"
      KANIKO_ARGS: --build-arg app_id="$APP_ID" --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --cache=true --cache-repo $CI_REGISTRY_IMAGE/cache --cache-copy-layers

tests:
  stage: tests
  needs:
    - job: build_docker_image
  image:
    name: $IMAGE_TAG
    entrypoint: [""]
  script:
    - cd ${CI_PROJECT_DIR}/src
    - pip3 install -r /ucsschool-id-connector/requirements-test.txt
    - python3 -m pytest -lvv --disable-warnings --junitxml=report.xml --cov=. --cov-report term-missing --color=yes --cov-fail-under="$ID_CONNECTOR_COVERAGE_LIMIT" --cov-report xml:coverage.xml tests/unittests
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      junit: src/report.xml
      coverage_report:
        coverage_format: cobertura
        path: src/coverage.xml

documentation:
  stage: docs
  trigger:
    include:
      - local: .gitlab-ci/gitlab-ci-docs.yml
    strategy: depend
  needs: ["run_pre_commit"]
  rules:
    - changes:
      - docs/**/*
      - "src/HISTORY.rst"
